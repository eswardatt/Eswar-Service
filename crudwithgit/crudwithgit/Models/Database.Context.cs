//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace crudwithgit.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AMS_ProjectEntities : DbContext
    {
        public AMS_ProjectEntities()
            : base("name=AMS_ProjectEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int DeleteHwdb(Nullable<int> assetID)
        {
            var assetIDParameter = assetID.HasValue ?
                new ObjectParameter("AssetID", assetID) :
                new ObjectParameter("AssetID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteHwdb", assetIDParameter);
        }
    
        public virtual ObjectResult<EditHwdb_Result> EditHwdb(Nullable<int> assetID)
        {
            var assetIDParameter = assetID.HasValue ?
                new ObjectParameter("AssetID", assetID) :
                new ObjectParameter("AssetID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EditHwdb_Result>("EditHwdb", assetIDParameter);
        }
    
        public virtual int InsertHwDb(string assetName, string manufacturer, string model)
        {
            var assetNameParameter = assetName != null ?
                new ObjectParameter("AssetName", assetName) :
                new ObjectParameter("AssetName", typeof(string));
    
            var manufacturerParameter = manufacturer != null ?
                new ObjectParameter("Manufacturer", manufacturer) :
                new ObjectParameter("Manufacturer", typeof(string));
    
            var modelParameter = model != null ?
                new ObjectParameter("Model", model) :
                new ObjectParameter("Model", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertHwDb", assetNameParameter, manufacturerParameter, modelParameter);
        }
    }
}
